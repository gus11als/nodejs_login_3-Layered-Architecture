generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  userId    Int      @id @default(autoincrement()) @map("userId")
  email     String   @unique @map("email")
  name      String   @map("name")
  password  String   @map("password")
  role      Role     @default(APPLICANT)
  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")
  resumes   Resume[] @relation("UserResumes")
  resumeLogs ResumeLog[]
  refreshTokens RefreshToken[] @relation("UserRefreshTokens")
  @@map("Users")
}

model RefreshToken {
  id        Int      @id @default(autoincrement()) @map("id")
  userId    Int      @map("userId")
  token     String   @unique @map("token")
  createdAt DateTime @default(now()) @map("createdAt")
  user      Users    @relation(fields: [userId], references: [userId], name: "UserRefreshTokens")

  @@map("RefreshTokens")
}

enum Role {
  APPLICANT
  RECRUITER
}

model Resume {
  resumeId     Int          @id @default(autoincrement()) @map("resumeId")
  userId       Int          @map("userId")
  userResumeId Int          @default(0) @map("userResumeId") // 사용자별 이력서 번호 추가
  title        String       @map("title")
  introduction String       @map("introduction")
  status       ResumeStatus @default(APPLY) @map("status")
  createdAt    DateTime     @default(now()) @map("createdAt")
  updatedAt    DateTime     @updatedAt @map("updatedAt")
  user         Users        @relation(fields: [userId], references: [userId], name: "UserResumes")
  resumeLogs   ResumeLog[]
  @@map("Resumes")
}

model ResumeLog {
  resumeLogId    Int      @id @default(autoincrement()) @map("resumeLogId")
  resumeId       Int      @map("resumeId")
  recruiterId    Int      @map("recruiterId")
  previousStatus ResumeStatus @map("previousStatus")
  newStatus      ResumeStatus @map("newStatus")
  reason         String   @map("reason")
  createdAt      DateTime @default(now()) @map("createdAt")

  resume         Resume   @relation(fields: [resumeId], references: [resumeId])
  recruiter      Users    @relation(fields: [recruiterId], references: [userId])

  @@map("ResumeLogs")
}

enum ResumeStatus {
  APPLY
  DROP
  PASS
  INTERVIEW1
  INTERVIEW2
  FINAL_PASS
}
